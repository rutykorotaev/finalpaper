---
title: "Spotify and the Russo-Ukrainian War"
subtitle: "An Analysis of Russian Artist Popularity Amid the War in Ukraine"
author: "Ruty Korotaev"
thanks: "Code and data are available at: https://github.com/rutykorotaev/finalpaper"
date: "19 April 2023"
abstract: "Following Russia's escalated invasion of Ukraine in February 2022, countries across the West and around the world have sought to end business dealings with Russian companies and boycott pro-Russian public figures. This widespread effort has gone from the highest levels of business and government, to individuals opting to stop purchasing Russian goods and not engaging with Russian popular culture, including musicians. This report uses data collected from Spotify APIs to address two main research questions. First, how has the popularity and following of both pro- and anti-Kremlin Russian musicians changed since the onset of the war in Ukraine. And two, how are Spotify's recommendation features impacting engagement with these Russian artists, and is it able to differentiate between the political affiliations of these artists? Among the main findings is that for many Russian-speaking Spotify users, the political affiliations of a given artists do not seem to play a role in their popularity, and there was very little difference in popularity among pro- and anti-Kremlin musicians. Additionally, in considering literature that discusses how social media platforms can lead to users down online rabbit holes of disinformation, conspiracy theories, and radicalization, this paper reviewed whether Spotify's recommendation function played a role in encouraging users to engage with pro-Kremlin musicians. As such, this paper discovered that the vast majority of Spotify's recommendations for both pro- and anti-Kremlin artists was for pro-Kremlin artists, though it was able to differentiate between Russian and Ukrainian artists (some of whom still perform in Russian)."
format: pdf
number-sections: true
bibliography: references.bib
---

# Introduction

Amid much of the Western world's efforts to sanction Kremlin-affiliated enterprises and Russian businesses, the movement to limit engagement with Russian popular culture has been an interesting side effect of the conflict. Following Russia's escalated invasion of Ukraine in February 2022, many Ukrainians and Ukrainian allies have rejected any forms of cultural engagement with Russian artists and the Russian language, which ranges from boycotting Western businesses still operating in the Russia and has trickled down to the music people listen to. This research paper looks at data collected through Spotify API to understand how the popularity of openly pro- and anti- Kremlin Russian musicians has shifted since the war began, looking at a time period between February and October 2022, taking into account the six months during which there was the most action in terms of sanctioning and banning Russian outlets (and vice versa within Russia and its bans of Western organizations). Among the pro-Kremlin artists are Basta, Eldzhey,, Max Korzh, and Skryptonite, while the anti-Kremlin artists (many of whom have been banned from Russia) are FACE, IC3PEAK, Noize MC, and Oxxxymiron. The paper will also explore the relationship between an artist's popularity rating and their follower count, to see how it may have shifted and changed over time. 

Further, the second part of this paper will take from literature around other social media outlets which analyzes how recommendations can lead users down certain rabbit holes. While these can sometimes be harmless, the worst cases can lead people down pathes to radicalization, entrenching users into information environments that spread mis- and disinformation, conspiracy theories, and far-right rhethoric. This paper analyzes how Spotify's recommendation features encourages or discourages users to engage with Russian users, and whether it is able to distinguish between the political affiliations of different artists. 

This paper is divided into several key sections. The Data section @sec-data-pop will outline where the data is from and what main variables were explored in the dataset, as well the visualizations related to the artist popularity and follower count variables. The @sec-data-related will delve into the second aspect explored in this paper, which focuses on the data about Spotify's recommendations for each artist. Next, the Results section @sec-results will provide an overview of the main findings that can be made by the data visualizations, which will be further explored within the @sec-discussion section, which will have three main discussion points that draw on conclusions that can be made based on the data. The project findings and limitations can be found in the last section @sec-limitations, which will discuss the various issues with the dataset and the Spotify API apparatus, as well as potential improvements for future projects and a few thoughts on how my personal biases impacted the results. 

# Data: Popularity and Followers {#sec-data-pop}

This paper uses data collected using the Spotify API "spotifyr" [@citespotifyr], and visualizes data from four top pro-Kremlin Russian artists and four top anti-Kremlin Russian artists to understand how and if their popularity on Spotify has been affected since the start of the escalated invasion of Ukraine. As part of this, the main variables that were used in this project include popularity, total followers, artist name, which were extracted using the `get_artists` function. In addition, I used data from the `get_related_artists` function, that shows the top 20 artists that come up in Spotify's recommendations when searching any given musician. This paper uses R [@citeR] to analyze the dataset, and several R packages were included in the project, including "tidyverse" [@citetidyverse], "dplyr" [@citedplyr], and "knitr" [@citeknitr].

To start, {@fig-popularity} and [@fig-pop-followers] use the `get_artists` function to get data on total follower count, popularity rating on Spotify, as well as the artist name and Spotify ID. Below, [@fig-popularity] hones in on the popularity variable and compares the popularity between pro- (in red) and anti-Kremlin (in blue) artists.  

## Popularity: Pro- vs. Anti-Kremlin Russian Artists on Spotify

```{r}
#| echo: false
#| message: false
#| label: fig-popularity
#| fig-cap: Popularity of Anti and Pro-Kremlin Russian Artists on Spotify 

# Load  libraries and read in dataset 
library(tidyverse)
library(ggplot2)
library(readr)

clean_info_dataset <- 
  read_csv(here::here("inputs/data/clean_info_dataset.csv"))

# Create data frame with all the necessary artist names
artists <- c("Oxxxymiron","Noize MC","FACE","IC3PEAK","Max Korzh","Skryptonite","Basta","Eldzhey")

# Extract data from the popularity column from the clean_info_dataset
popularity <- clean_info_dataset$popularity

# Create a data frame with the artist names, their popularity score, and followers.total values
data <- data.frame(x = artists, y = popularity)

# Plot the data in a line segment, with the pro-Kremlin artists in red and the anti-Kremlin artists being in blue
ggplot(data, aes(x = x, y = popularity)) + 
  geom_segment(aes(x = x, xend = artists, y = 0, yend = y),
color = ifelse(data$x %in% c("Oxxxymiron", "Noize MC", "FACE", "IC3PEAK"), "blue", "red"),
size = ifelse(data$x %in% c("Oxxxymiron", "Noize MC", "FACE", "IC3PEAK"), 0.3, 0.3)) +
  geom_point(color = ifelse(data$x %in% c("Oxxxymiron", "Noize MC", "FACE", "IC3PEAK"), "blue", "red"), 
size = ifelse(data$x %in% c("Oxxxymiron", "Noize MC", "FACE", "IC3PEAK"), 2.5, 2.5)) +
  theme_classic()

```

\newpage

Next, @fig-pop-followers looks at whether there is a correlation between the artists' follower counts and their popularity score. 

```{r}
#| echo: false
#| message: false
#| label: fig-pop-followers
#| fig-cap: Correlation Between Follower Count and Popularity Score

library(ggrepel)
library(readr)
library(dplyr)

clean_info_dataset <- 
  read_csv(here::here("inputs/data/clean_info_dataset.csv"))

# Create data frame of artists 
artists_pop_followers <- c("Oxxxymiron",
             "Noize MC",
             "FACE",
             "Ice Peak",
             "Max Korzh",
             "Skriptonite",
             "Basta",
             "Eldzhey")

# Extract all the popularity data for each artist
oxxxymiron_pop <- clean_info_dataset %>%
  filter(name == "Oxxxymiron") %>%
  pull(popularity)
noizemc_pop <- clean_info_dataset %>%
  filter(name == "Noize MC") %>%
  pull(popularity)
face_pop <- clean_info_dataset %>%
  filter(name == "FACE") %>%
  pull(popularity)
icepeak_pop <- clean_info_dataset %>%
  filter(name == "IC3PEAK") %>%
  pull(popularity)
maxkorzh_pop <- clean_info_dataset %>%
  filter(name == "Max Korzh") %>%
  pull(popularity)
skriptonite_pop <- clean_info_dataset %>%
  filter(name == "Skryptonite") %>%
  pull(popularity)
basta_pop <- clean_info_dataset %>%
  filter(name == "Basta") %>%
  pull(popularity)
eldzhey_pop <- clean_info_dataset %>%
  filter(name == "Eldzhey") %>%
  pull(popularity)

popularity2 <- c(oxxxymiron_pop,
                noizemc_pop,
                face_pop,
                icepeak_pop,
                maxkorzh_pop,
                skriptonite_pop,
                basta_pop,
                eldzhey_pop)

# Extract all the follower data for each artist
oxxxymiron_followers <- clean_info_dataset %>%
  filter(name == "Oxxxymiron") %>%
  pull(followers.total)
noizemc_followers <- clean_info_dataset %>%
  filter(name == "Noize MC") %>%
  pull(followers.total)
face_followers <- clean_info_dataset %>%
  filter(name == "FACE") %>%
  pull(followers.total)
icepeak_followers <- clean_info_dataset %>%
  filter(name == "IC3PEAK") %>%
  pull(followers.total)
maxkorzh_followers <- clean_info_dataset %>%
  filter(name == "Max Korzh") %>%
  pull(followers.total)
skriptonite_followers <- clean_info_dataset %>%
  filter(name == "Skryptonite") %>%
  pull(followers.total)
basta_followers <- clean_info_dataset %>%
  filter(name == "Basta") %>%
  pull(followers.total)
eldzhey_followers <- clean_info_dataset %>%
  filter(name == "Eldzhey") %>%
  pull(followers.total)

followers <- c(oxxxymiron_followers,
               noizemc_followers,
               face_followers,
               icepeak_followers,
               maxkorzh_followers,
               skriptonite_followers,
               basta_followers,
               eldzhey_followers)

scatterplot_data <- data.frame(x = followers, y = popularity2) 


#Plot graph 
ggplot(scatterplot_data, aes(x = popularity2, y = followers)) +
  geom_point(aes(colour = factor(artists_pop_followers)), size = 1.75) +
  xlab("Popularity") +
  ylab("Followers") +
  scale_colour_discrete(name = "Artists")

```

## Data: Spotify Recommendations {#sec-data-related}

Next, the following few visualizations will pertain to the second part of this paper's analysis, which uses the `get_related_artists` function in order to get a list of the top 20 artists that are recommended by Spotify for each artist. 

The below visualization shows the recommendations for the pro-Russian artists Eldzhey, Basta, and Max Korzh, as well as the anti-Russian ones, including Oxxymiron, Noize MC, and IC3 Peak. The other two artists , who ranked as the most popular artists for both sides of the political 
11focus on the second part of this paper's analysis, which focuses on the recommendations function of Spotify and the role it may play in encouraging users to engage with more pro-Russian artists that are available on the platform. In it, we look at the recommendations for  Eldzhey, who is one of Russia's most prominent rappers and has been openly supportive of the war in Ukraine. He has been officially banned from entering Ukraine, following a concert he gave in 2018 in the Russian-occupied region of Crimea. 

```{r}
#| echo: false
#| message: false
#| label: fig_eldzhey_related
#| fig-cap: Spotify Recommendations for Eldzhey 

eldzhey_related <- 
  read_csv(here::here("inputs/data/eldzhey_related_clean.csv"))

# Extract the top ten artists recommended by Spotify
eldzhey_top10 <- eldzhey_related %>% 
  filter(name %in% c("T-Killah", "Zomb", "Geegun", "Lesha Svik", "Jah Khalib", "L'One", "T-Fest", "MiyaGi & Endspiel", "Timati")) %>% 
  group_by(name) %>% 
  summarise(followers = sum(followers.total), n = n()) %>% 
  arrange(desc(n)) %>% 
  head(10)

# Define colours of artists, with blue being anti-RU and red being pro-RU
eldzhey_top10$color <- ifelse(eldzhey_top10$name %in% c("Lesha Svik", "Jah Khalib"), "blue", "red")

# Plot the data
ggplot(eldzhey_top10, aes(x = name, y = followers)) + 
  geom_segment(aes(x = name, xend = name, y = 0, yend = followers),
    color = eldzhey_top10$color, size = 1.5) +
  geom_point(size = 3, shape = 21, fill = "white", colour = "black") +
  coord_flip() +
  labs(x = "Artist", y = "Total Followers")

```

The following graphic in @fig_maxkorzh_related shows the related artists for the pro-Russian artist Max Korzh. 

```{r}
#| echo: false
#| message: false
#| label: fig_maxkorzh_related
#| fig-cap: Spotify Recommendations for Max Korzh  

maxkorzh_related <- 
  read_csv(here::here("inputs/data/maxkorzh_related_clean.csv"))

# Extract the top ten artists recommended by Spotify
max_top10 <- maxkorzh_related %>% 
  filter(name %in% c("LSP", "ATL", "T-Fest", "Skryptonite", "Truwer", "Thomas Mraz", "Mnogoznaal", "FACE", "Markul")) %>% 
  group_by(name) %>% 
  summarise(followers = sum(followers.total), n = n()) %>% 
  arrange(desc(n)) %>% 
  head(10)

# Define colours of artists, with blue being anti-RU and red being pro-RU
max_top10$color <- ifelse(max_top10$name %in% c("FACE"), "blue", "red")

# Plot the data
ggplot(max_top10, aes(x = name, y = followers)) + 
  geom_segment(aes(x = name, xend = name, y = 0, yend = followers),
    color = max_top10$color, size = 1.5) +
  geom_point(size = 3, shape = 21, fill = "white", colour = "black") +
  coord_flip() +
  labs(x = "Artist", y = "Total Followers")

```

Next, in @fig_basta_related, we can see the top artists taht were recommended for the pro-Kremlin artist Basta.

```{r}
#| echo: false
#| message: false
#| label: fig_basta_related
#| fig-cap: Spotify Recommendations for Basta 

# Read in dataset 
basta_related <- 
  read_csv(here::here("inputs/data/basta_related_clean.csv"))

# Extract the top ten artists recommended by Spotify
basta_top10 <- basta_related %>% 
  filter(name %in% c("Noggano", "Zanuda", "9 Gramm", "Triagrutrika", "Kaspiyskiy Gruz", "Kravz", "Rem Digga", "Smoky Mo", "Slovetskii", "L'One")) %>% 
  group_by(name) %>% 
  summarise(followers = sum(followers.total), n = n()) %>% 
  arrange(desc(n)) %>% 
  head(10)

# Define colours of artists, with blue being anti-RU and red being pro-RU
basta_top10$color <- ifelse(basta_top10$name %in% c("Kravz"), "blue", "red")

# Plot the data
ggplot(basta_top10, aes(x = name, y = followers)) + 
  geom_segment(aes(x = name, xend = name, y = 0, yend = followers),
    color = basta_top10$color, size = 1.5) +
  geom_point(size = 3, shape = 21, fill = "white", colour = "black") +
  coord_flip() +
  labs(x = "Artist", y = "Total Followers")

```
Next, I will be showing the recommended artists for the anti-Kremlin Russian artists. Below in @fig_icepeak_related is the visualization for the rapper IC3PEAK. 

```{r}
#| echo: false
#| message: false
#| label: fig_icepeak_related
#| fig-cap: Spotify Recommendations for IC3PEAK 

icepeak_related <- 
  read_csv(here::here("inputs/data/icepeak_related_clean.csv"))

# Extract the top ten artists recommended by Spotify
icepeak_top10 <- icepeak_related %>% 
  filter(name %in% c("Crim3s", "Sidewalks and Skeletons", "Zheani", "Jazmin Bean", "My", "Banshee", "Pastel Ghost", "King Plague", "GRLwood", "polnalyubvi")) %>% 
  group_by(name) %>% 
  summarise(followers = sum(followers.total), n = n()) %>% 
  arrange(desc(n)) %>% 
  head(10)

# Define colors based on artist's name
icepeak_top10$color <- ifelse(icepeak_top10$name %in% c("Crim3s", "Sidewalks and Skeletons", "Zheani", "Jazmin Bean", "Banshee", "Pastel Ghost", "King Plague", "GRLwood"), "green", "red")
icepeak_top10$color <- ifelse(icepeak_top10$name %in% c("My", "polnalyubvi"), "red", icepeak_top10$color)

# Plot the data
ggplot(icepeak_top10, aes(x = followers, y = name)) +
  geom_segment(aes(x = 0, xend = followers, y = name, yend = name),
  color = icepeak_top10$color, size = 1.5) +
  geom_point(size = 3, shape = 21, fill = "white", colour = "black") +
  scale_x_continuous(labels = scales::comma) +
  labs(x = "Total Followers", y = "Artist") +
  theme(axis.text.y = element_text(hjust = 0))

```
Here, in @fig_oxxxymiron_related we have a graph outlining the recommendations for Oxxxymiron, who has been a very outspoken critic of the war and of the Kremlin leadership. Due to his words against the Russian leadership, he has been exiled from Russia and forbidden from performing there. 

```{r}
#| echo: false
#| message: false
#| label: fig_oxxxymiron_related
#| fig-cap: Spotify Recommendations for Oxxxymiron 

oxxxymiron_related <- 
  read_csv(here::here("inputs/data/oxxymironrelated_clean.csv"))

# Extract the top ten artists recommended by Spotify
oxxxymiron_top10 <- oxxxymiron_related %>% 
  filter(name %in% c("ATL", "Husky", "Thomas Mraz", "LSP", "Mnogoznaal", "Krovostok", "43ai", "Luperkal", "Markul", "Timati")) %>% 
  group_by(name) %>% 
  summarise(followers = sum(followers.total), n = n()) %>% 
  arrange(desc(n)) %>% 
  head(10)

# Define colors based on artist's name
oxxxymiron_top10$color <- ifelse(oxxxymiron_top10$name %in% c("Luperkal", "Krovostok"), "blue", "red")

# Plot the data
ggplot(oxxxymiron_top10, aes(x = followers, y = name)) +
  geom_segment(aes(x = 0, xend = followers, y = name, yend = name),
  color = oxxxymiron_top10$color, size = 1.5) +
  geom_point(size = 3, shape = 21, fill = "white", colour = "black") +
  scale_x_continuous(labels = scales::comma) +
  labs(x = "Total Followers", y = "Artist") +
  theme(axis.text.y = element_text(hjust = 0))

```

Finally, @fig_noizemc_related shows the graph for Spotify's recommendations for NOIZE MC, who has also been very outspoken in his support for Ukraine and has since been exiled from Russia.

```{r}
#| echo: false
#| message: false
#| label: fig_noizemc_related
#| fig-cap: Spotify Recommendations for Noize MC 

noizemc_related <- 
  read_csv(here::here("inputs/data/noizemc_related_clean.csv"))

# Extract the top ten artists recommended by Spotify
noizemc_top10 <- noizemc_related %>% 
  filter(name %in% c("Anacondaz", "ATL", "43ai","Krovostok", "Husky", "Vlady", "25/17", "LSP", "Oxxxymiron", "Lumen")) %>% 
  group_by(name) %>% 
  summarise(followers = sum(followers.total), n = n()) %>% 
  arrange(desc(n)) %>% 
  head(10)

# Define colors based on artist's name
noizemc_top10$color <- ifelse(noizemc_top10$name %in% c("Krovostok", "Vlady", "25/17","Oxxxymiron"), "blue", "red")

# Plot the data
ggplot(noizemc_top10, aes(x = followers, y = name)) +
  geom_segment(aes(x = 0, xend = followers, y = name, yend = name),
  color = noizemc_top10$color, size = 1.5) +
  geom_point(size = 3, shape = 21, fill = "white", colour = "black") +
  scale_x_continuous(labels = scales::comma) +
  labs(x = "Total Followers", y = "Artist") +
  theme(axis.text.y = element_text(hjust = 0))


```

# Model {#sec-model}

Below is a logistic regressive model that looks at Skryptonite (the most popular pro-Putin artists) and FACE (most popular anti-Kremlin musician), reviewing the top 20 artists that appear as recommendations from Spotify for each artist. A manual analysis was conducted to determine whether a given recommended musician was supportive of the Putin regime or not, with those being deemed pro-Kremlin being assigned a "1" value and those against Putin being assigned "0". 

The `data.frame` functions helped to create a data frame with two main columns: One was for artists who are Pro-Russian, called "Pro_Russia" and the other was "Spotify_Recommendations." The Russia column contains binary values indicating whether the artist is pro-Russia (1) or anti-Russia (0), and the recommendations column contains binary values indicating whether the recommended artists are also pro-Russia (1) or anti-Russia (0). Further, the `glm` function works to apply a logistic regression model to the data, with Spotify_Recommendations being thte outcome variable, and Pro_Russia being the predictor variable. 

The glm function fits a logistic regression model to the data, with recommendations as the outcome variable and Russia as the predictor variable. The family argument specifies that a binomial distribution should be used, since the outcome variable is binary.

The coef function extracts the coefficients from the fitted model, which represent the log odds of being recommended pro-Russia artists given that an artist is pro-Russia (compared to being anti-Russia).

The exp(coef(model)) code computes the exponentiated coefficients, which represent the odds ratios of being recommended pro-Russia artists given that an artist is pro-Russia (compared to being anti-Russia).



```{r}
#| echo: false
#| message: false
#| label: fig-skriptonite_recs
#| fig-cap: Spotify's Recommended Artists for Skriptonite and FACE

# Create a dataframe that includes the recommended variables and the predictor variables 
data <- data.frame(
  Russia = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
  Recommendations = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0))

# Apply a logistic regression model 
model <- glm(Recommendations ~ Russia, data = data, family = "binomial")

# Extract  model coefficients
model_coef <- broom::tidy(model) 

# Develop the odds ratio to get the log odds 
exp(coef(model))


```

# Results {#sec-results}

There are several key results that can be gleaned from the above visualizations. First, as @fig_popularity shows, we can see that the pro-Kremlin artists (who are outlined in red) and the anti-Kremlin artists (in blue) do not have huge differences in popularity among Spotify users. We can see that Skryptonite, the Russian rapper is among the most openly supportive of the Putin regime, ranks as the most popular, though by a very small margin. The least popular artist appears to be Oxxxymiron, who has been incredibly vocal about being against the war in Ukraine, and has since been banned within Russia and forced to leave the country. 

Next, @fig-pop_followers looks at the correlation between total follower counts and the popularity number assigned by Spotify. What can be seen in this graph is that, as with @fig_popularity, staunchly pro-Putin rapper Skryptonite has the most amount of followers and the highest popularity score. Noize MC, who is ardently anti-Putin, has both the lowest popularity rating and lowest amount of followers. Interestingly, Oxxxymiron and Eldzhey, who are on very opposite ends of the political spectrum, ranked very close in both popularity and follower count. 

# Discussion {#sec-discussion}
This section will offer a summary and discussion of the main findings that emerged out of this report. 

## First Finding:  {#sec-first-point}
The first finding, as outlined in @fig-popularity is that the political affilation of a certain artist does not seem to impact their popularity among listeners. 

## Second Finding: {#sec-second-point}
Next, the second main finding is that, while the model's numbers are not statistically significant, reviewing the actual artists demonstrates that Spotify is encouraging engagement with pro-Russian musicians on the platform through its recommendations. 

## Third Finding: {#sec-third-point}
Finally, another key finding of this paper is that while content-wise, many of the pro-Russian artists produced media that is similar, they did not have a lot of overlap in terms of Spotify's recommendations. 

## Project Limitations and Next Steps {#sec-limitations}

There are number of project limitations that should be considered when reviewing this data. 

First, the Spotify API posed a lot of issues when it came to accessing telling data. When initially setting out to do this project, I had intended to track the popularity of Russian and Ukrainian artists on Spotify over the course of the first six months following the Russian invasion of Ukraine. However, after many, many attempts, and becoming overly familiar with all of the functions within the Spotify R package [@citespotifyr], it became apparent that it is impossible to access either an artist's popularity rating or monthly listeners number of the course of a specified period of time without the use of a Third-Party software to do so. Had I been successful in this, it would have been interesting to see how and if the popularity of various artists changed over the course of the war, particularly as people continued to make everyday, conscious choices in boycotting products and artists associated with Russia. 

Moreover, there is also a function that allows developers to see the popularity of an artist within certain Spotify markets, but it also was difficult to use and hard to actually gain this data. After a lot of trial and error, this paper was able to get a few key variables about artists, but future work in this could seek to review more deeply the question of Russsian and Ukrainian musical popularity over time and analyzing differences within various key markets. 

In addition, my own personal biases may have played a role in the decision-making process as it relates to reviewing the artist's political affiliations. As mentioned above, the criteria for deciding whether an artist was supportive of the Putin regime or not was based on a review of several factors. 

First, I analyzed their respective social media pages (namely Facebook, VKontakte, and Instagram) to see if they have posted any statements online about their stance on Russia's invasion of Ukraine. If an artist did not have any statements or other symbols of solidarity to Ukraine, I assumed that they were pro-Kremlin, or at the very least, unwilling to use their online platforms to speak out against the regime. This could have led to a false assumption on whether someone was supportive of Putin, because as is well-documented, saying openly critical things of the Russian government poses many personal risks to not only musicians and artists, but ordinary people. 

Another factor that I incorporated in this decision-making process was seeing if they had any concerts happening in Russia or if they were performing internationally. This serves as a very telling indicator because most experts say that only artists who are pro-Putin (or at least silently complicit) are still able to perform within Russia without being banned by authorities. In this sense, while I attempt to cross reference various indicators of political affilation, there is inevitably room for error in this approach. 

Finally, another important point to note is that, as mentioned above, Spotify has been banned in Russia and the organization has stopped all of its operations within the country in March 2022. While it is difficult to know how many people within Russia are using VPNs to circumvent government bans and access Spotify, this paper does not address how and if the ban has impacted Russian artist popularity since the start of the ban (largely due to the aforementioned reasons). 

Regardless, it is important to note that the ban must have played some kind of role in their popularity, as not all people are able to use VPNs to gain access to Spotify within Russia. Moreover, while this seems to be related to privacy issues, the Spotify API does not allow developers to access demographic data of a certain artist's listeners. This data would have provided invaluable insights, particularly in showing which countries have the most users actively listening to either pro- or anti-Kremlin artists. 

This data could then be tied to larger ideas on the proliferation of Russian disinformation around the world, and could offer valuable insights into the impact and permeation of pro-Kremlin narratives, and how they translate into individual's musical preferences and choices. 

\newpage
# References


